/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

&mt {
    quick-tap-ms = <400>;
};

/ {
    behaviors {
      tht: tap_pref_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "TAP_PREF_HOLD_TAP";
        #binding-cells = <2>;
	tapping-term-ms = <200>;
        quick-tap-ms = <400>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
      };
    };
    combos {
      compatible = "zmk,combos";
      combo_tab {
        timeout-ms = <50>;
	key-positions = <13 14>;
	bindings = <&kp TAB>;
      };
      combo_rbkt {
        timeout-ms = <50>;
	key-positions = <22 23>;
	bindings = <&kp RBKT>;
      };
      // workaround
      combo_y {
        timeout-ms = <50>;
        key-positions = <19 20>;
        bindings = <&kp y>;
      };
    };

    macros {
        ZMK_MACRO(updir,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp DOT &kp DOT &kp FSLH>;
        )
        ZMK_MACRO(nmspc,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp COLON &kp COLON>;
        )
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
&kp GRAVE &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp UNDER
&kp ESC   &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P    &kp LBKT
&mt LC(LSHIFT) RG(SPACE) &kp A  &kp S  &kp D    &kp F    &kp G                      &kp H  &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&mt C_AL_CALC PSCRN &kp Z  &kp X  &tht LC(LS(C)) C    &tht LC(LS(V)) V    &kp B  &kp LC(RG(LEFT))   &kp LC(RG(RIGHT)) &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp BSLH
          &kp RGUI  &mt LALT DEL &lt 1 TAB  &mt LCTRL SPACE      &mt RSHIFT BSPC &lt 2 RET &mt RALT DEL &kp RGUI
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |  '  |  <  |  >   |  "   |  .   |                   |  &   |  ::   |  [    |  ]   |   %   |       |
// |       |  !  |  -  |  +   |  =   |  #   |                   |  |   |  :    |  (    |  )   |   ?   |       |
// |       |  ^  |  /  |  *   |  \   | ../  |C(S(TAB)|  |LC(TAB)|  ~   |  $    |  {    |  }   |   @   |       |
//                     |      |      |      |        |  |       |ADJUST|       |       |
			bindings = <
&trans     &trans           &trans            &trans            &trans       &trans                       &trans    &trans    &trans          &trans    &trans    &trans
&trans     &kp APOS         &kp LT            &kp GT            &kp DQT      &kp DOT                      &kp AMPS  &nmspc    &kp LBKT        &kp RBKT  &kp PRCNT &trans
&trans     &kp EXCL         &kp MINUS         &kp PLUS          &kp EQUAL    &kp HASH                     &kp PIPE  &kp COLON &kp LPAR        &kp RPAR  &kp QMARK &trans
&trans     &kp CARET        &kp FSLH          &kp STAR          &kp BSLH     &updir    &kp LC(LS(TAB))   &kp LC(TAB)    &kp TILDE &kp DLLR  &kp LBRC        &kp RBRC  &kp AT    &trans
                                              &trans            &trans       &trans    &trans   &trans    &mo 2    &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  <-  |   ^   |  v    |  ->  |       |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |C(S(TAB)|  |LC(TAB)|      |       |       |      |       |       |
//                     |      |      |ADJUST|        |  |       |      |       |       |
			bindings = <
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
&kp GRAVE &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7    &kp N8    &kp N9   &kp N0    &trans
&kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &mt LC(LEFT) LEFT    &kp DOWN  &kp UP    &mt LC(RIGHT) RIGHT &trans   &trans
&kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12   &kp LC(LS(TAB))   &kp LC(TAB)    &trans      &trans    &trans    &trans  &trans  &trans
                        &trans  &trans  &mo 1    &trans   &trans    &trans      &trans    &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		adjust_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |     |      |      |      |                   | MUTE |  PREV | PAUSE | NEXT |       |       |
// |       |     |     |      |      |      |  VOL-  |  | VOL+  |      |       |       |      |       |       |
//                     |      |      |      |        |  |       |      |       |       |
			bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &trans      &trans      &trans    &trans    &trans   &trans    &trans
&trans   &trans   &trans   &trans   &trans   &trans                  &trans   &trans   &trans   &trans   &trans   &trans
&trans   &trans   &trans   &trans   &trans   &trans                  &kp C_MUTE   &kp C_PREV   &kp C_PLAY_PAUSE &kp C_NEXT   &trans   &trans
&trans   &trans   &trans   &trans   &trans   &trans   &kp C_VOL_DN  &kp C_VOL_UP &trans   &trans   &trans   &trans   &trans   &trans
                        &trans  &trans  &trans   &trans     &trans   &trans   &trans   &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
	};
};
